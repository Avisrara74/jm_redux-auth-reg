{"version":3,"sources":["serviceWorker.js","API/routes.js","API/index.js","redux/actions/index.js","components/home-page/index.js","components/sign-in/index.js","components/sign-up/index.js","react-router/private-route.js","react-router/auth-route.js","components/App.js","localstorage/index.js","redux/reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","url","signUpUrl","signInUrl","checkFieldErrors","errResponse","formik","Object","entries","forEach","error","field","message","setFieldError","setSubmitting","networkErrorCheck","err","alert","signInErrorsCheck","keys","length","httpHeader","method","headers","json","signInProcess","userData","a","axios","data","JSON","stringify","routes","response","responseUserData","user","username","token","isAuthorized","errors","signUpProcess","newUser","resetForm","signUpRequest","createAction","signUpSuccess","signUpFailure","signInRequest","signInSuccess","signInFailure","logOutSuccess","actionCreators","actions","HomePage","props","className","type","onClick","defaultProps","connect","state","formikInitialValues","email","password","signIn","dispatch","SignIn","isInputsDisable","useFormik","initialValues","onSubmit","values","handleOnAuthorizationUser","handleSubmit","htmlFor","placeholder","id","name","onChange","handleChange","value","disabled","touched","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","htmlType","to","signInState","formikInicialValues","repeatPassword","formItems","uniqueId","title","formikValidationSchema","Yup","max","required","min","matches","oneOf","signUp","newUserData","SignUp","isSignUpRequestSuccess","handleOnSignUp","validationSchema","map","formItem","key","signUpState","Component","component","rest","render","App","useEffect","undefined","localStorage","path","exact","setItemToLocalstorage","setItem","String","removeItemFromLocalstorage","removeItem","handleActions","userDataInitial","action","payload","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d4a78cd3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const url = 'https://conduit.productionready.io/api/';\nexport const signUpUrl = `${url}users`;\nexport const signInUrl = `${url}users/login`;\n","import axios from 'axios';\nimport * as routes from './routes';\n\n// проверка на ошибки в полях\nexport const checkFieldErrors = (errResponse, formik) => {\n  Object.entries(errResponse).forEach((error) => {\n    const [field, message] = error;\n    formik.setFieldError(field, message);\n    formik.setSubmitting(false);\n  });\n};\n\n// проверка на ошибку сети\nexport const networkErrorCheck = (err) => {\n  if (err.message === 'Network Error') {\n    alert('Ошибка соединения'); // eslint-disable-line no-alert\n  }\n};\n\n// проверка ошибки авторизации\nexport const signInErrorsCheck = (errResponse, formik) => {\n  if (Object.keys(errResponse).length > 0) {\n    formik.setFieldError('email', 'Неверный логин или пароль');\n    formik.setFieldError('password', 'Неверный логин или пароль');\n    formik.setSubmitting(false);\n  }\n};\n\nconst httpHeader = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8',\n  },\n  json: true,\n};\n\n// авторизация\nexport const signInProcess = async (userData, formik) => {\n  try {\n    const response = await axios({\n      ...httpHeader,\n      data: JSON.stringify(userData),\n      url: routes.signInUrl,\n    });\n\n    const responseUserData = response.data.user;\n\n    return {\n      username: responseUserData.username,\n      token: responseUserData.token,\n      isAuthorized: true,\n    };\n  } catch (err) {\n    networkErrorCheck(err);\n    signInErrorsCheck(err.response.data.errors, formik);\n    throw err;\n  }\n};\n\n// регистрация\nexport const signUpProcess = async (newUser, formik) => {\n  try {\n    await axios({\n      ...httpHeader,\n      data: JSON.stringify(newUser),\n      url: routes.signUpUrl,\n    });\n    alert('Регистрация прошла успешно'); // eslint-disable-line no-alert\n    formik.resetForm();\n  } catch (err) {\n    networkErrorCheck(err);\n    checkFieldErrors(err.response.data.errors, formik);\n    throw err;\n  }\n};\n","import { createAction } from 'redux-actions';\nimport { signInProcess, signUpProcess } from '../../API';\n\nexport const signUpRequest = createAction('SIGN_UP_REQUEST');\nexport const signUpSuccess = createAction('SIGN_UP_SUCCESS');\nexport const signUpFailure = createAction('SIGN_UP_FAILURE');\n\n// регистрация\nexport const signUp = (newUserData, formik) => async (dispatch) => {\n  dispatch(signUpRequest());\n  try {\n    await signUpProcess(newUserData, formik);\n    dispatch(signUpSuccess());\n  } catch (err) {\n    dispatch(signUpFailure());\n  }\n};\n\nexport const signInRequest = createAction('LOG_IN_REQUEST');\nexport const signInSuccess = createAction('LOG_IN_SUCCESS');\nexport const signInFailure = createAction('LOG_IN_FAILURE');\n\n// авторизация\nexport const signIn = (userData, formik) => async (dispatch) => {\n  dispatch(signInRequest());\n  try {\n    const responseUserData = await signInProcess(userData, formik);\n    dispatch(signInSuccess(responseUserData));\n  } catch (err) {\n    dispatch(signInFailure());\n  }\n};\n\nexport const logOutSuccess = createAction('LOGOUT_SUCCESS');\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport * as actions from '../../redux/actions';\nimport '../style.css';\nimport 'antd/dist/antd.css';\n\nconst actionCreators = {\n  logOutSuccess: actions.logOutSuccess,\n};\n\nconst HomePage = (props) => {\n  const { logOutSuccess, username } = props;\n\n  const handleOnLogOut = () => {\n    logOutSuccess();\n  };\n\n  return (\n    <div className=\"home\">\n      <span className=\"home-title\">\n        {`Привет, ${username}`}\n      </span>\n      <Button className=\"home-logout\" type=\"primary\" onClick={handleOnLogOut}>Выход</Button>\n    </div>\n  );\n};\n\nHomePage.propTypes = {\n  logOutSuccess: propTypes.func,\n  username: propTypes.string,\n};\n\nHomePage.defaultProps = {\n  logOutSuccess: null,\n  username: '',\n};\n\nexport default connect((state) => ({\n  username: state.userData.username,\n}), actionCreators)(HomePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../style.css';\nimport * as actions from '../../redux/actions';\n\nconst formikInitialValues = {\n  email: '',\n  password: '',\n};\n\nconst mapStateToProps = (state) => {\n  const { signInState } = state;\n  const isInputsDisable = (signInState === 'requested');\n\n  return { isInputsDisable };\n};\n\nconst actionCreators = {\n  signIn: actions.signIn,\n};\n\nconst SignIn = (props) => {\n  const { isInputsDisable, signIn } = props;\n\n  const handleOnAuthorizationUser = (formik) => {\n    const { email, password } = formik.values;\n    const userData = {\n      user: {\n        email,\n        password,\n      },\n    };\n    signIn(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInitialValues,\n    onSubmit: () => {\n      handleOnAuthorizationUser(formik);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"form\">\n      <div className=\"form-title\">Авторизация</div>\n      <label htmlFor=\"email\" className=\"form-item\">\n        Почта:\n        <Input\n          placeholder=\"Введите Email\"\n          id=\"email\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          disabled={isInputsDisable}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div className=\"form-item-error\">{formik.errors.email}</div>\n        ) : null}\n      </label>\n\n      <label htmlFor=\"password\" className=\"form-item\">\n        Пароль:\n        <Input.Password\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Введите Пароль\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n          disabled={isInputsDisable}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div className=\"form-item-error\">{formik.errors.password}</div>\n        ) : null}\n      </label>\n\n      <div className=\"form-item\">\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className=\"form-submit\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n        >\n          Войти\n        </Button>\n        <Link to=\"sign-up\" className=\"form-link\">Регистрация</Link>\n      </div>\n    </form>\n  );\n};\n\nSignIn.propTypes = {\n  signIn: propTypes.func,\n  isInputsDisable: propTypes.bool,\n};\n\nSignIn.defaultProps = {\n  signIn: null,\n  isInputsDisable: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignIn);\n","import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\n\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport '../style.css';\n\nconst formikInicialValues = {\n  username: '',\n  email: '',\n  password: '',\n  repeatPassword: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Логин:', name: 'username', placeholder: 'Введите логин',\n  },\n  {\n    id: uniqueId(), title: 'Почта:', name: 'email', placeholder: 'Введите почту',\n  },\n  {\n    id: uniqueId(), title: 'Пароль:', name: 'password', placeholder: 'Введите пароль',\n  },\n  {\n    id: uniqueId(), title: 'Повторите пароль:', name: 'repeatPassword', placeholder: 'Повторите пароль',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  username: Yup.string()\n    .max(30, 'Слишком длинный ник!')\n    .required('Заполните поле'),\n  email: Yup.string()\n    .email('Некорректный email')\n    .required('Заполните поле'),\n  password: Yup.string()\n    .min(8, 'Слишком короткий')\n    .max(50, 'Слишком длинный')\n    .matches(/^[A-Za-z0-9]+$/, 'Пароль может содержать только латинские символы и цифры')\n    .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру')\n    .matches(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\n    .required('Заполните поле'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\n    .required('Заполните поле'),\n});\n\nconst mapStateToProps = (state) => {\n  const { signUpState } = state;\n  const isInputsDisable = (signUpState === 'requested');\n  const isSignUpRequestSuccess = (signUpState === 'finished');\n\n  const props = { isInputsDisable, isSignUpRequestSuccess };\n  return props;\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst SignUp = (props) => {\n  const { signUp, isSignUpRequestSuccess, isInputsDisable } = props;\n\n  const handleOnSignUp = async (formik) => {\n    const { username, email, password } = formik.values;\n    const newUser = {\n      user: {\n        username,\n        email,\n        password,\n      },\n    };\n    signUp(newUser, formik);\n  };\n\n  const SignInRedirect = () => (\n    (isSignUpRequestSuccess) ? (<Redirect to=\"sign-in\" />) : null\n  );\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnSignUp(formik);\n    },\n  });\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <label key={formItem.id} htmlFor={formItem.name} className=\"form-item\">\n        {formItem.title}\n        <Input\n          type={(formItem.name === 'password' || formItem.name === 'repeatPassword') ? 'password' : 'text'}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {formik.touched[formItem.name] && formik.errors[formItem.name] ? (\n          <div className=\"form-item-error\">{formik.errors[formItem.name]}</div>\n        ) : null}\n      </label>\n    ))\n  );\n\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"form\">\n      <div className=\"form-title\">Регистрация</div>\n      {renderInputs()}\n      <div className=\"form-item\">\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          className=\"form-submit\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n        >\n          Зарегистрироваться\n        </Button>\n        <Link to=\"/sign-in\" className=\"form-link\">Страница авторизации</Link>\n        {SignInRedirect()}\n      </div>\n    </form>\n  );\n};\n\nSignUp.propTypes = {\n  signUp: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isSignUpRequestSuccess: propTypes.bool,\n};\n\nSignUp.defaultProps = {\n  signUp: null,\n  isInputsDisable: false,\n  isSignUpRequestSuccess: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignUp);\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = (props) => {\n  const { component: Component, isAuthorized, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={() => (isAuthorized ? <Component {...props} /> : <Redirect to=\"/sign-in\" />)}\n    />\n  );\n};\n\nexport default connect((state) => ({\n  isAuthorized: state.userData.isAuthorized,\n}), null)(PrivateRoute);\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst AuthRoute = (props) => {\n  const { component: Component, isAuthorized, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={() => (isAuthorized ? <Redirect to=\"/\" /> : <Component {...props} />)}\n    />\n  );\n};\n\nexport default connect((state) => ({\n  isAuthorized: state.userData.isAuthorized,\n}), null)(AuthRoute);\n","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HomePage from './home-page';\nimport SignIn from './sign-in';\nimport SignUp from './sign-up';\nimport PrivateRoute from '../react-router/private-route';\nimport AuthRoute from '../react-router/auth-route';\nimport './app.css';\nimport * as actions from '../redux/actions';\nimport { signInSuccess } from '../redux/actions';\n\nconst mapStateToProps = (state) => {\n  const { userData } = state;\n  const props = {\n    isAuthorized: userData.isAuthorized,\n    userData,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  signInSuccess: actions.signInSuccess,\n};\n\nconst App = (props) => {\n  const { dispatch, isAuthorized } = props;\n  const authorizationCheck = () => {\n    if (localStorage.token === undefined) return;\n    dispatch(signInSuccess({\n      isAuthorized: true,\n      token: localStorage.token,\n      username: localStorage.username,\n    }));\n  };\n\n  useEffect(() => {\n    authorizationCheck();\n  }, [isAuthorized]);\n\n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={HomePage} />\n        <AuthRoute path=\"/sign-in\" component={SignIn} />\n        <AuthRoute path=\"/sign-up\" component={SignUp} />\n        <Redirect to=\"/sign-in\" />\n      </Switch>\n    </Router>\n  );\n};\n\nApp.propTypes = {\n  dispatch: propTypes.func,\n  isAuthorized: propTypes.bool,\n};\n\nApp.defaultProps = {\n  dispatch: null,\n  isAuthorized: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","export const setItemToLocalstorage = (key, value) => {\n  localStorage.setItem(String(key), String(value));\n};\n\nexport const removeItemFromLocalstorage = (key) => {\n  localStorage.removeItem(key);\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\n\nconst signUpState = handleActions({\n  [actions.signUpRequest]() {\n    return 'requested';\n  },\n  [actions.signUpFailure]() {\n    return 'failed';\n  },\n  [actions.signUpSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst signInState = handleActions({\n  [actions.signInRequest]() {\n    return 'requested';\n  },\n  [actions.signInFailure]() {\n    return 'failed';\n  },\n  [actions.signInSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst userDataInitial = { username: '', token: '', isAuthorized: false };\nconst userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const { username, token, isAuthorized } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    return { username, token, isAuthorized };\n  },\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  },\n}, userDataInitial);\n\nexport default combineReducers({\n  signUpState,\n  signInState,\n  userData,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport reducers from './redux/reducers';\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunk),\n  ),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App dispatch={store.dispatch} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}